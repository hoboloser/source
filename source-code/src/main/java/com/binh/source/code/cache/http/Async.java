package com.binh.source.code.cache.http;

/**
 * 异步并发
 * 
 * 异步是针对CPU和IO的，当IO没有就绪时要让出CPU来处理其他任务，这才是异步。
 * 
 * --------------------------------------------------------------------------------
 * 
 * <p> 异步/协程  </p>
 * 
 * 在Java中，如使用tomcat，一个请求会分配一个线程进行请求处理，该线程负责获数据、拼装数据或模板，然后返回给前端。
 * 在同步调用获取数据接口的情况下（等待依赖系统返回数据），整个线程是一直被占用并阻塞的。
 * 如果有大量这种请求，则每个请求占用一个线程，但线程一直处于阻塞，降低了系统的吞吐量，导致应用的吞吐量下降。
 * 
 * 我们希望，在调用依赖的服务响应比较慢时，应该让出线程和CPU来处理下一个请求，当依赖的服务返回后再分配相应的线程来
 * 继续处理。
 * 
 * 而Java是不支持协程的 ，因此可以使用异步来提升吞吐量。
 * 
 * 如： HttpAsyncClient、Dubbo、Thrift等
 * 
 * 
 * 通过异步并发并不能使响应变得更快，更多是为了提升吞吐量、对请求更细粒度控制，或是通过多依赖服务并发调用降低服务响应时间。
 * 
 * 
 * @author binh
 * @date 2018/08/05
 */
public class Async {

}
